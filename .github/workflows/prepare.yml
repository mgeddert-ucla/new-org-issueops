# Parses migration issue and creates a comment with next step
#

name: Prepare

on:
  issues:
    types: [opened, edited]

jobs:
  prepare:
    name: Prepare Migration
    runs-on: ubuntu-latest

    if: github.event_name == 'issues' &&
      (github.event.action == 'opened' || github.event.action == 'edited') &&
      contains(github.event.issue.labels.*.name, 'new-org')

    steps:
      # - name: Dump GitHub context
      #   id: github_context_step
      #   run: echo '${{ toJSON(github) }}'

      - name: Dump GitHub context
        run: echo '${{ toJSON(github.event.issue.user) }}'

      - name: Dump GitHub context
        run: echo '${{ fromJSON(github.event.issue.user) }}'

      - uses: stefanbuck/github-issue-parser@v2
        id: issue-parser

      - name: Post prepare message
        uses: actions/github-script@v5
        with:
          script: |
            let commentBody
            commentBody = `ðŸ‘‹ Thank you for opening this new org issue.

            The following has been parsed from your issue body:
            - The **org name** is set to be: **\`${{ steps.issue-parser.outputs.issueparser_org_name }}\`**
            - The **org admin** is set to be: **\`${{ github.event.issue.user.login }}\`**

            ## Step 1: Approving the request

            Note that an admin has to approve the request in order to proceed. The Admin should run: 

            \`\`\`
            /approve
            \`\`\`

            ## Step 2: Create the org

            Once it has been approved, add comment to this issue in order to create the org:
          
            \`\`\`
            /create-org
            \`\`\`
            `

            await github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: '${{ github.REPOSITORY_OWNER }}',
              repo: '${{ github.event.repository.name }}',
              body: commentBody.replace(/  +/g, '')
            })
      - name: Post failure message
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            let commentBody
            commentBody = `ðŸ˜¢ The issue body could not be parsed. Please open a new issue using an issue template.`
            await github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: '${{ github.REPOSITORY_OWNER }}',
              repo: '${{ github.event.repository.name }}',
              body: commentBody.replace(/  +/g, '')
            })
